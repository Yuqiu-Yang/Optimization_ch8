{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
temp$fn
temp$xn
temp <- regula_falsi_method_ex(y, 2, 0)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2])
}
y <- function(x){x^3 - 1}
x <- seq(-0.5,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = nrow(temp$xn))))
}
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.5,1, length.out = nrow(temp$xn))))
}
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
library(latex2exp)
library(knitr)
library(kableExtra)
library(gridExtra)
library(grid)
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
x0 <- 2
x1 <- 0
x0 <- 2
x1 <- 0
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
abline(h = 0, col = "cyan", lwd = 2)
lines(x, secant_line, col = "darkorchid")
x1 <- -a/b
b <- (y(x1) - y(x0)/2)/(x1-x0)
a <- y(x0)/2 - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
b <- (y(x1) - y(x0)/8)/(x1-x0)
a <- y(x0)/8 - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
x1 <- -a/b
b <- (y(x1) - y(x0)/8)/(x1-x0)
a <- y(x0)/8 - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid",
lty = 2)
lines(x, secant_line, col = "darkorchid",
lty = 6)
segments(x1, 0,
x1, y(x1), lty = 2)
segments(x0, y(x0),
x0, 0, lty = 2)
lines(x, secant_line, col = "orange",
lty = 6)
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
x1 <- -a/b
b <- (y(x1) - y(x0)/8)/(x1-x0)
a <- y(x0)/8 - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "orange",
lty = 6)
segments(x1, 0,
x1, y(x1), lty = 2)
segments(x0, y(x0),
x0, y(x0)/8, lty = 2)
legend("topleft", legend = c("1st iter",
"2nd iter"),
col = c("darkorchid", "orange"),
lty = c(1,6))
legend("topleft", legend = c("1st iter",
"2nd iter"),
col = c("darkorchid", "orange"),
lty = c(1,6), bty = "n", cex = 1.5)
points(x1, 0, pch = 19)
points(x1, 0, pch = 19, col = "darkorchid")
points(x1, 0, pch = 19, col = "darkorchid", cex= 1.5)
-a/b
points(-a/b, 0, pch = 19, col = "orange", cex = 1.5)
points(x1, y(x1), pch = 19, col = "darkorchid", cex= 1.5)
points(-a/b, y(-a/b), pch = 19, col = "orange", cex = 1.5)
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
x1 <- -a/b
b <- (y(x1) - y(x0)/8)/(x1-x0)
a <- y(x0)/8 - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "orange",
lty = 6)
points(x1, y(x1), pch = 19, col = "darkorchid", cex= 1.5)
points(-a/b, y(-a/b), pch = 19, col = "orange", cex = 1.5)
segments(x1, 0,
x1, y(x1), lty = 2)
segments(x0, y(x0),
x0, y(x0)/8, lty = 2)
legend("topleft", legend = c("1st iter",
"2nd iter"),
col = c("darkorchid", "orange"),
lty = c(1,6), bty = "n", cex = 1.5)
segments(-a/b, 0,
-a/b, y(-a/b), lty = 2)
-a/b
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
y <- function(x){x^3 - 1}
x0 <- 2
x1 = 0
e_tol = 1e-5
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
err <- Inf
i <- 2
xn
yn
fn
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
y_vec
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
x_new
(y_vec[1]) * y_new
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
y_new
err <- abs(y_new)
i <- i + 1
xn
fn
i
err
c(y(xn[i-1,1]), y(xn[i-1,2]))
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
i > 2
xn[i-1,1] == xn[i-2,1]
y_vec[1] <- y_vec[1]/2
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
(y_vec[1]) * y_new
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
err <- abs(y_new)
i <- i + 1
xn
fn
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
xn[i-1,1] == xn[i-2,1]
i
y_vec[1] <- y_vec[1]/2
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
(y_vec[1]) * y_new
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
xn
fn
illinois_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
err <- Inf
i <- 2
while(err > e_tol)
{
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
if(i > 2)
{
if(xn[i-1,1] == xn[i-2,1])
{
y_vec[1] <- y_vec[1]/2
}else if(xn[i-1,2] == xn[i-2,2]){
y_vec[2] <- y_vec[2]/2
}
}
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if((y_vec[1]) * y_new < 0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y_vec[2]))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- illinois_ex(y, 2, 0)
temp
x0
x1
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
err <- Inf
i <- 2
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if((y_vec[1]) * y_new < 0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y_vec[2]))
}
err <- abs(y_new)
i <- i + 1
i
err
y_vec <- c(y(xn[i-1,1]), y(xn[i-1,2]))
if(i > 2)
{
if(xn[i-1,1] == xn[i-2,1])
{
y_vec[1] <- y_vec[1]/2
}else if(xn[i-1,2] == xn[i-2,2]){
y_vec[2] <- y_vec[2]/2
}
}
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if((y_vec[1]) * y_new < 0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y_vec[2]))
}
err <- abs(y_new)
i <- i + 1
y_vec <- c(fn[i-1,1], fn[i-1,2])
if(i > 2)
{
if(xn[i-1,1] == xn[i-2,1])
{
y_vec[1] <- y_vec[1]/2
}else if(xn[i-1,2] == xn[i-2,2]){
y_vec[2] <- y_vec[2]/2
}
}
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if((y_vec[1]) * y_new < 0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y_vec[2]))
}
err <- abs(y_new)
i <- i + 1
y <- function(x){x^3 - 1}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "")
illinois_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
err <- Inf
i <- 2
while(err > e_tol)
{
y_vec <- c(fn[i-1,1], fn[i-1,2])
if(i > 2)
{
if(xn[i-1,1] == xn[i-2,1])
{
y_vec[1] <- y_vec[1]/2
}else if(xn[i-1,2] == xn[i-2,2]){
y_vec[2] <- y_vec[2]/2
}
}
b <- (y_vec[1] - y_vec[2])/(xn[i-1,1]-xn[i-1,2])
a <- y_vec[1] - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if((y_vec[1]) * y_new < 0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y_vec[1], y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y_vec[2]))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- illinois_ex(y, 2, 0)
temp
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.5,1, length.out = nrow(temp$xn))))
}
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.7,1, length.out = nrow(temp$xn))))
}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : 10)
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = 10)))
}
temp$fn
for(i in 1 : 4)
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = 4)))
}
for(i in 1 : 4)
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.5,1, length.out = 4)))
}
for(i in 1 : 10)
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.5,1, length.out = 10)))
}
