x <- seq(0,3, by = 0.1)
y <- sin(x) - x^2/4
plot(x, y)
x <- seq(-1,3, by = 0.1)
y <- sin(x) - x^2/4
plot(x, y)
library(latex2exp)
x <- seq(-2,3, by = 0.01)
y <- sin(x) - x^2/4
plot(x, y, )
plot(x, y, type = 'l')
x <- seq(-2,3, by = 0.01)
y <- sin(x) - x^2/4
plot(x, y, type = 'l')
abline(h = 0, col = "cyan", lwd = 2)
dy <- cos(x) - x/2
newton_line <- (cos(1) - 1/2) * x + sin(1) - 1^2/4 - (cos(1) - 1/2)
lines(x, newton_line)
x <- seq(-2, 3, by = 0.01)
y <- function(x){sin(x) - x^2/4}
dy <- function(x) {cos(x) - x/2}
plot(x, y(x), type = 'l')
abline(h = 0, col = "cyan", lwd = 2)
newton_line <-  b * x + (y(-1) - b * (-1))
b <- dy(-1)
newton_line <-  b * x + (y(-1) - b * (-1))
lines(x, newton_line)
b <- dy(-1.5)
newton_line <-  b * x + (y(-1.5) - b * (-1.5))
lines(x, newton_line)
plot(x, y(x), type = 'l')
abline(h = 0, col = "cyan", lwd = 2)
b <- dy(-1.5)
newton_line <-  b * x + (y(-1.5) - b * (-1.5))
lines(x, newton_line)
lines(x, newton_line, col = "salmon")
x0 <- -1.5
a <- y(x0) - b * (x0)
abline(h = a)
newton_line <-  b * x + a
points(-a/b, 0)
points(-a/b, 0, pch = 19, cex = 2,
col = "salmon")
x1 <- -2
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line)
x1 <- 1.5
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line)
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19, cex = 2,
col = "darkorchid")
plot(x, y(x), type = 'l')
abline(h = 0, col = "cyan", lwd = 2)
x0 <- -1.5
b <- dy(x0)
a <- y(x0) - b * (x0)
newton_line <-  b * x + a
lines(x, newton_line, col = "salmon")
points(-a/b, 0, pch = 19, cex = 2,
col = "salmon")
x1 <- 1.5
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19, cex = 2,
col = "darkorchid")
points(x0, y(x0))
points(x1, y(x1))
arrow(x0, -1, x0, y(x0))
arrows(x0, -1, x0, y(x0))
arrows(x0, -1, x0, y(x0),
angle = 20)
text(x0, -1, "x0 = -1.5")
text(x0, -0.7, "x0 = -1.5")
arrows(x1, -0.1, x1, y(x1),
angle = 20)
text(x1, -0.7, "x1 = 1.5")
text(x1, -0.5 , "x1 = 1.5")
text(x1, -0.3 , "x1 = 1.5")
x <- seq(-2, 3, by = 0.01)
y <- function(x){sin(x) - x^2/4}
dy <- function(x) {cos(x) - x/2}
plot(x, y(x), type = 'l',
main = "1st iteration Newton vs. Secant")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- -1.5
b <- dy(x0)
a <- y(x0) - b * (x0)
newton_line <-  b * x + a
lines(x, newton_line, col = "salmon")
points(-a/b, 0, pch = 19, cex = 2,
col = "salmon")
x1 <- 1.5
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19, cex = 2,
col = "darkorchid")
points(x0, y(x0))
points(x1, y(x1))
arrows(x0, -1, x0, y(x0),
angle = 20)
text(x0, -0.8, "x0 = -1.5")
arrows(x1, -0.1, x1, y(x1),
angle = 20)
text(x1, -0.3 , "x1 = 1.5")
legend("bottom", legend = c("Newton", "Secant"),
col = c("salmon", "darkorchid"),
lty = 1)
legend("bottom", legend = c("Newton", "Secant"),
col = c("salmon", "darkorchid"),
lty = 1, bty = "n")
legend("bottom", legend = c("Newton", "Secant"),
col = c("salmon", "darkorchid"),
lty = c(1,1,NA,NA),
pch = c(NA,NA,19,19),
bty = "n")
legend("bottom", legend = c("Newton", "Secant",
"Newton 2nd iter",
"Secant 2nd iter"),
col = c("salmon", "darkorchid"),
lty = c(1,1,NA,NA),
pch = c(NA,NA,19,19),
bty = "n")
x <- seq(-2, 3, by = 0.01)
y <- function(x){sin(x) - x^2/4}
plot(x, y(x), type = 'l',
main = "1st iteration Newton vs. Secant")
abline(h = 0, col = "cyan", lwd = 2)
x <- seq(-2, 3, by = 0.01)
y <- function(x){sin(x) - x^2/4}
plot(x, y(x), type = 'l',
main = "Secant method")
abline(h = 0, col = "cyan", lwd = 2)
x_n <- c(x0, x1)
x <- seq(-2, 3, by = 0.01)
y <- function(x){sin(x) - x^2/4}
plot(x, y(x), type = 'l',
main = "Secant method")
abline(h = 0, col = "cyan", lwd = 2)
secant_method_ex <- function(x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
i <  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
err <- abs(y(-a/b))
i <- i + 1
}
}
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
i <  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
err <- abs(y(-a/b))
i <- i + 1
}
}
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
i <  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
err <- abs(y(-a/b))
i <- i + 1
}
return(list(xn, err))
}
secant_method_ex(y, -1.5,1.5)
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
i <-  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
err <- abs(y(-a/b))
i <- i + 1
}
return(list(xn, err))
}
secant_method_ex(y, -1.5,1.5)
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
fn <- c(y(x0), y(x1))
i <-  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
fn <- c(fn, y(-a/b))
err <- abs(y(-a/b))
i <- i + 1
}
return(list(fn, xn, err))
}
temp <- secant_method_ex(y, -1.5,1.5)
temp
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
fn <- c(y(x0), y(x1))
i <-  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
fn <- c(fn, y(-a/b))
err <- abs(y(-a/b))
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- secant_method_ex(y, -1.5,1.5)
points(temp$xn, temp$fn)
points(temp$xn, temp$fn, pch = 19)
points(temp$xn, temp$fn, pch = 19,
col = c(1:12))
col2rgb("darkorchid")
points(temp$xn, temp$fn, pch = 19,
col = rgb(153, 50, 204))
points(temp$xn, temp$fn, pch = 19,
col = rgb(153/255, 50/255, 204/255))
rgb(153/255, 50/255, 204/255)
rgb(153/255, 50/255, 204/255, seq(0.1,1, length.out = 12))
plot(x, y(x), type = 'l',
main = "Secant method")
abline(h = 0, col = "cyan", lwd = 2)
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
fn <- c(y(x0), y(x1))
i <-  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
fn <- c(fn, y(-a/b))
err <- abs(y(-a/b))
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- secant_method_ex(y, -1.5,1.5)
points(temp$xn, temp$fn, pch = 19,
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = 12)))
points(temp$xn, temp$fn, pch = 19, cex =1.5
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = 12)))
points(temp$xn, temp$fn, pch = 19, cex =1.5,
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = 12)))
library(knitr)
library(kableExtra)
temp_df <- data.frame(matrix(NA, nrow = length(temp$fn),
ncol = 4))
library(gridExtra)
library(grid)
colnames(temp_df) <- c("n", "xn", "fn")
######
temp_df <- data.frame(matrix(NA, nrow = 6,
ncol = 3))
colnames(temp_df) <- c("n", "xn", "fn")
temp_df$
knitr::kable(temp_df, "simple")
temp
