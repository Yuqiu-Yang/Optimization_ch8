lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19)
arrows(x1, 1, x1, y(x1),
angle = 20)
text(x1, 1.2, "x2 = 0.7692")
arrows(x1, 1.2, x1, y(x1),
angle = 20)
text(x1, 1.5, "x2 = 0.7692")
plot(x,y(x), type = "l", main = "2nd Iteration: Regula Falsi")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 1.5
x1 <- x2
points(x0, y(x0))
points(x1, y(x1))
arrows(x0, 0.5, x0, y(x0),
angle = 20)
text(x0, 0.2, "x0 = 1.5")
arrows(x1, 1.2, x1, y(x1),
angle = 20)
text(x1, 1.5, "x2 = 0.7692")
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19)
y <- function(x){x^3 - 1}
x <- seq(0,2, 0.1)
plot(x,y(x), type = "l", main = "First Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 1.5
x1 <- 0.5
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
y <- function(x){x^3 - 1}
x <- seq(0,2, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0.5
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
arrows(x2, 3, x2, 0,
angle = 20)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
library(latex2exp)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0.5
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
arrows(x2, 3, x2, 0,
angle = 20)
text(x2, 3.2, "x2 = 0.6667")
arrows(x0, 0, x0, y(x0),
angle = 20)
text(x0, -0.2, "x0 = 2")
x <- seq(0,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0.5
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
arrows(x2, 3, x2, 0,
angle = 20)
text(x2, 3.2, "x2 = 0.6667")
arrows(x0, 1, x0, y(x0),
angle = 20)
text(x0, 0.8, "x0 = 2")
arrows(x1, 2, x1, y(x1),
angle = 20)
text(x1, 2.5, "x1 = 0.5")
arrows(x2, 4, x2, 0,
angle = 20)
text(x2, 4.2, "x2 = 0.6667")
plot(x,y(x), type = "l", main = "2nd Iteration: Secant")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 0.5
x1 <- x2
points(x0, y(x0))
points(x1, y(x1))
arrows(x0, 0.5, x0, y(x0),
angle = 20)
text(x0, 1.2, "x1 = 0.5")
arrows(x0, 2, x0, y(x0),
angle = 20)
text(x0, 2.5, "x0 = 1.5")
arrows(x1, 1.2, x1, y(x1),
angle = 20)
text(x1, 1.5, "x2 = 0.7692")
arrows(x0, 2, x0, y(x0),
angle = 20)
text(x0, 2.5, "x1 = 0.5")
arrows(x1, 4, x1, y(x1),
angle = 20)
text(x1, 4.2, "x2 = 0.6667")
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19)
y <- function(x){x^3 - 1}
x <- seq(0,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x0 <- 2.25
x1 <- 0.75
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x0 <- 2
x1 <- 0.4
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
x0 <- 2
x1 <- 0
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
arrows(x2, 4, x2, 0,
angle = 20)
text(x2, 4.2, "x2 = 0.25")
arrows(x0, 1, x0, y(x0),
angle = 20)
text(x0, 0.8, "x0 = 2")
arrows(x1, 2, x1, y(x1),
angle = 20)
text(x1, 2.5, "x1 = 0")
y <- function(x){x^3 - 1}
x <- seq(-0.5,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- 0
points(x0, y(x0))
points(x1, y(x1))
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0)
x2 <- -a/b
arrows(x2, 4, x2, 0,
angle = 20)
text(x2, 4.2, "x2 = 0.25")
arrows(x0, 1, x0, y(x0),
angle = 20)
text(x0, 0.8, "x0 = 2")
arrows(x1, 2, x1, y(x1),
angle = 20)
text(x1, 2.5, "x1 = 0")
plot(x,y(x), type = "l", main = "2nd Iteration: Secant")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 0
x1 <- x2
points(x0, y(x0))
points(x1, y(x1))
arrows(x0, 2, x0, y(x0),
angle = 20)
text(x0, 2.5, "x1 = 0")
arrows(x1, 4, x1, y(x1),
angle = 20)
text(x1, 4.2, "x2 = 0.25")
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19)
plot(x,y(x), type = "l", main = "2nd Iteration: Regula Falsi")
abline(h = 0, col = "cyan", lwd = 2)
x0 <- 2
x1 <- x2
points(x0, y(x0))
points(x1, y(x1))
arrows(x0, 1, x0, y(x0),
angle = 20)
text(x0, 0.8, "x0 = 2")
arrows(x1, 4, x1, y(x1),
angle = 20)
text(x1, 4.2, "x2 = 0.25")
b <- (y(x1) - y(x0))/(x1-x0)
a <- y(x0) - b * (x0)
secant_line <- b * x + a
lines(x, secant_line, col = "darkorchid")
points(-a/b, 0, pch = 19)
library(latex2exp)
library(knitr)
library(kableExtra)
library(gridExtra)
library(grid)
secant_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- c(x0, x1)
fn <- c(y(x0), y(x1))
i <-  3
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1]) - y(xn[i-2]))/(xn[i-1]-xn[i-2])
a <- y(xn[i-2]) - b * (xn[i-2])
xn <- c(xn, -a/b)
fn <- c(fn, y(-a/b))
err <- abs(y(-a/b))
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
y <- function(x){x^3 - 1}
x <- seq(-0.5,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
temp <- secant_method_ex(y, x0 = 2, x1 = 0)
temp
points(temp$xn)
points(temp$xn, temp$fn)
a <- c(0,1)
cbine(a,a)
cbind(a,a)
rbind(a,a)
a <- matrix(c(0,1), nrow= 1)
a
rbind(a,a)
cbind(a,a)
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,2])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
View(y)
temp <- regula_falsi_method_ex(y, 2, 0, e_tol = 1)
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,2])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
print(err)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0, e_tol = 1)
y
x0
x1
x1=0
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
xn
fn
err <- Inf
i <-  2
y <- function(x){x^3 - 1}
x <- seq(-0.5,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
y(xn[i-1,1])
y(xn[i-1,1]) * y_new
y(xn[i-1,1]) * y_new <0
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
xn
fn
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
print(err)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
temp$fn
temp$xn
temp <- regula_falsi_method_ex(y, 2, 0)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2])
}
y <- function(x){x^3 - 1}
x <- seq(-0.5,2.5, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
regula_falsi_method_ex <- function(FUN = y, x0, x1, e_tol = 1e-5)
{
xn <- matrix(c(x0, x1), nrow = 1)
fn <- matrix(c(y(x0), y(x1)), nrow = 1)
i <-  2
err <- Inf
while(err > e_tol)
{
b <- (y(xn[i-1,1]) - y(xn[i-1,2]))/(xn[i-1,1]-xn[i-1,2])
a <- y(xn[i-1,1]) - b * (xn[i-1,1])
x_new <- -a/b
y_new <- y(x_new)
if(y(xn[i-1,1]) * y_new <0)
{
xn <- rbind(xn, c(xn[i-1,1], x_new))
fn <- rbind(fn, c(y(xn[i-1,1]), y_new))
}else{
xn <- rbind(xn, c(x_new, xn[i-1,2]))
fn <- rbind(fn, c(y_new, y(xn[i-1,1])))
}
err <- abs(y_new)
i <- i + 1
}
return(list(fn = fn,
xn = xn,
err = err))
}
temp <- regula_falsi_method_ex(y, 2, 0)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.1,1, length.out = nrow(temp$xn))))
}
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.5,1, length.out = nrow(temp$xn))))
}
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "1st Iteration")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
x <- seq(0,2.01, 0.1)
plot(x,y(x), type = "l",
ylab = TeX("$x^3 - 1$"),
main = "Iterations")
abline(h = 0, col = "cyan", lwd = 2)
for(i in 1 : nrow(temp$fn))
{
segments(temp$xn[i,1], temp$fn[i,1],
temp$xn[i,2], temp$fn[i,2],
col = rgb(153/255, 50/255, 204/255,
seq(0.2,1, length.out = nrow(temp$xn))))
}
